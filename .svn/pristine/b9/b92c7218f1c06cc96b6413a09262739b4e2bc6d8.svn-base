package com.androplus.AnimalBeats;

import java.util.Date;

import android.content.Context;
import android.content.Intent;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.os.Bundle;
import android.support.v4.app.ListFragment;
import android.support.v7.app.ActionBarActivity;
import android.util.Log;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.view.Window;
import android.widget.ImageButton;

import com.androplus.ads.AdManager;
import com.androplus.ads.AdsKey;
import com.androplus.ads.InterstitialAdListener;
import com.androplus.ads.enums.AdProvider;
import com.androplus.common.PreferenceData;
import com.google.android.gms.analytics.GoogleAnalytics;
import com.google.android.gms.analytics.Tracker;
import com.mopub.mobileads.MoPubErrorCode;
import com.mopub.mobileads.MoPubInterstitial;

public class BaseActivity extends ActionBarActivity  {

	public Tracker t;
	protected ListFragment mFrag;
	public MenuItem SettingsMenuItem;
	public ImageButton menuEdt;
	public PreferenceData pd;
	//public IMInterstitial interestials = null;
	//protected InterstitialAd intAds;
	/*public BaseActivity(int titleRes) {
		mTitleRes = titleRes;
	}*/

	@Override
	public void onCreate(Bundle savedInstanceState) {
		requestWindowFeature(Window.FEATURE_INDETERMINATE_PROGRESS);
		super.onCreate(savedInstanceState);
		pd = new PreferenceData(this);
		setup();
	}

	private void setup(){
		t = ((ApplicationManager) getApplication()).getTracker(ApplicationManager.TrackerName.APP_TRACKER);
		AdsKey adskey = new AdsKey();
		adskey.setMoPubMobileBannerKey(getString(R.string.mopub_mobile_banner));
		adskey.setMoPubMobileInterstialKey(getString(R.string.mopub_mobile_fullscreen));
		
		adskey.setMoPubTabletBannerKey(getString(R.string.mopub_tablet_banner));
		adskey.setMoPubTabletInterstialKey(getString(R.string.mopub_tablet_fullscreen));
		
		adskey.setGoogleAdKey(getString(R.string.admob_banner_key));
		adskey.setGoogleInterstitialAdKey(getString(R.string.admob_fullscreeen_key));
		
		adskey.setInMobiBannerAdKey(getString(R.string.inmobi_banner));
		adskey.setInMobiInterstitialAdKey(getString(R.string.inmobi_fullscreen));
		
		adskey.setMMBannerAdKey(getString(R.string.mm_banner));
		adskey.setMMInterstitialAdKey(getString(R.string.mm_fullscreen));
		
		AdManager.setAdProvider(AdProvider.MO_PUB);
		AdManager.init("GooglePlay", adskey, false);
	}
	
	@Override
	protected void onStart() {
		GoogleAnalytics.getInstance(this).reportActivityStart(this);
		super.onStart();
	}
	
	@Override
	protected void onStop() {
		GoogleAnalytics.getInstance(this).reportActivityStop(this);
		super.onStop();
	}
	
	
	@Override
	protected void onDestroy() {

		try{
			AdManager.onPause();
		}catch (Exception e) {
			e.printStackTrace();
		}
		super.onDestroy();
	}
	
	@Override
	protected void onPause() {
		try{
			AdManager.onPause();
		}catch (Exception e) {
			e.printStackTrace();
		}
		super.onPause();
	}
	
	@Override
	public void onBackPressed() {
			super.onBackPressed();
	}
	
	@Override
	protected void onResume() {
		//Aps = (UILApplication) getApplicationContext();
		super.onResume();
	}
	
	public void createShareIntent() {
		Intent shareIntent = new Intent(Intent.ACTION_SEND);
		shareIntent.setType("text/plain");
		String url ="";
		url = "https://play.google.com/store/apps/details?id="+getPackageName();
		Log.d("SHARE", url);
		shareIntent.putExtra(android.content.Intent.EXTRA_SUBJECT,pd.getAppName());
		shareIntent.putExtra(android.content.Intent.EXTRA_TEXT, url);
		startActivity(Intent.createChooser(shareIntent, "Share - " + pd.getAppName()));
	}
	
	
	public void removeAdContainer(){
		ViewGroup adContainer = (ViewGroup) findViewById(R.id.adContainer);
		adContainer.setVisibility(View.GONE);
	}
	

	public boolean isNetworkAvailable() {
		ConnectivityManager connectivityManager = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);
		NetworkInfo activeNetworkInfo = connectivityManager.getActiveNetworkInfo();
		return activeNetworkInfo != null && activeNetworkInfo.isConnected();
	}
	
	public void showAd(boolean isBannerAd, ViewGroup adContainer){
		try {
			
			if(isBannerAd && adContainer==null){
				adContainer = (ViewGroup) findViewById(R.id.adContainer);
			}
			
				if (isBannerAd){
					AdManager.showAd(this, adContainer, new OnClickListener() {					
					@Override
					public void onClick(View v) {
						
					}
				});
					
					//AdmobAds.showAd(this, adContainer);
					//AppLovinAds.showAd(this, adContainer, AppLovinAdSize.BANNER);
					//InmobiAds.showAd(this, adContainer);
				
				}else{
							
						
							
							Date now = new Date();
							
							if (AppConstants.lastShowedTime == 0){
								AppConstants.lastShowedTime = new Date().getTime();							
							}else if ( now.getTime() > (AppConstants.lastShowedTime + pd.getIntersDuration())){							
								AppConstants.lastShowedTime = new Date().getTime();	
								
								Log.e("fullscreenads","---welcome--");
								
								AdManager.loadMoPubInterstitialAd(this, new InterstitialAdListener(){
									
									@Override
									public void onInterstitialLoaded(MoPubInterstitial interstitial) {
										AdManager.showMoPubInterstitialAd(BaseActivity.this);
									}
									
									@Override
									public void onInterstitialFailed(MoPubInterstitial interstitial,MoPubErrorCode errorCode) {
										super.onInterstitialFailed(interstitial, errorCode);
									}
								});
								
							}else{
								Log.e("fullscreenads","time not reached!!!");
							}
							
							now = null;
						}
						
						
		}
		catch(Exception e){
			e.printStackTrace();
		}
	}
	
}
